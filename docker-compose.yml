version: '3.8'
services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - iot-network

  # Kafka for data ingestion
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - iot-network

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - iot-network

  # Nessie for Iceberg catalog versioning
  nessie:
    image: projectnessie/nessie:0.74.0
    container_name: nessie
    ports:
      - "19120:19120"
    environment:
      NESSIE_VERSION_STORE_TYPE: IN_MEMORY
    networks:
      - iot-network

  # Spark Master
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    deploy:
      resources:
        limits:
          memory: 1G
    volumes:
      - ./spark:/opt/spark/work-dir
      - ./data:/opt/spark/data
    networks:
      - iot-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:3.4.1
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    deploy:
      resources:
        limits:
          memory: 800M
    volumes:
      - ./spark:/opt/spark/work-dir
      - ./data:/opt/spark/data
    networks:
      - iot-network

  # Dremio for data visualization
  dremio:
    image: dremio/dremio-oss:latest
    container_name: dremio
    hostname: dremio
    depends_on:
      - minio
      - nessie
    ports:
      - "9047:9047"
      - "31010:31010"
    volumes:
      - dremio_data:/opt/dremio/data
      - ./dremio-hadoop-conf:/opt/dremio/conf/hadoop
    environment:
      - DREMIO_S3_VERIFY_CREDENTIALS=false
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
      - AWS_ENDPOINT=http://minio:9000
      - DREMIO_MAX_MEMORY_SIZE_MB=4096
      - DREMIO_MAX_DIRECT_MEMORY_SIZE_MB=4096
    deploy:
      resources:
        limits:
          memory: 4.5G
        reservations:
          memory: 4G
    restart: unless-stopped
    networks:
      - iot-network
  #####
  # Apache Superset for visualization
  superset:
    image: apache/superset:latest
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=your_secret_key_here
    volumes:
      - superset_data:/app/superset_home
      - ./sqlalchemy_dremio-master:/app/sqlalchemy_dremio-master
    command: >
      /bin/bash -c "
      pip install --upgrade 'SQLAlchemy~=1.4.50' &&
      pip install --upgrade 'pyarrow~=14.0.1' &&
      pip install --no-build-isolation --no-deps /app/sqlalchemy_dremio-master &&
      superset db upgrade &&
      superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
      superset init &&
      /usr/bin/run-server.sh
      "
    networks:
      - iot-network

volumes:
  minio_data:
  dremio_data:
  superset_data:

networks:
  iot-network:
    driver: bridge
